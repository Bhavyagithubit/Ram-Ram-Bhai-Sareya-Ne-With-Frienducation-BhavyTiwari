//Best Time to Buy and Sell Stock
class Solution {
    public int maxProfit(int[] prices) {
        int maxProfit = 0;
        int buyPrice = Integer.MAX_VALUE;
        for(int i = 0; i < prices.length;i++){
            if(buyPrice < prices[i]){
                int profit = prices[i] - buyPrice;
                maxProfit = Math.max(profit,maxProfit);
            }
            else{
                buyPrice = prices[i];
            }
        }
        return maxProfit;
    }
}
//Time complexity-O(n)
//Space complexity-O(1)


//Missing Number
class Solution {
    public int missingNumber(int[] nums) {
        int size = nums.length;
        int sumOfNum=(size*(size+1))/2;
        for(int num : nums){
           sumOfNum-=num;
        }
        return sumOfNum;
    }
}
//time complexity-O(n)
//space complexity-O(1)
